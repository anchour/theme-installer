<?php

namespace Anchour\Theme\Installer\Console\Commands;

use Anchour\Theme\Installer\Transformations\FieldGroup;
use Illuminate\Support\Collection;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class CreateACFModulesCommand extends Command
{
    /**
     * @var array
     */
    protected $options = [];

    /**
     * @var string
     */
    protected $description = 'Creates the base ACF modules for use in an Anchour WordPress theme.';

    /**
     * @var array
     */
    private $defaultGroups = ['clone-base.json'];

    protected function configure()
    {
        $this->setName('create-modules')
            ->setDescription('Create the base ACF modules.');

        $this->addOptions();
    }

    protected function addOptions()
    {
        $groups = glob($this->packageRoot . '/resources/stubs/acf-json/*.json');

        $this->options = (new Collection($groups))->map(function ($path) {
            $fieldGroup = new FieldGroup($path);

            return [
                'key' => $fieldGroup->key,
                'name' => $fieldGroup->title,
                'path' => $path,
                'default' => in_array($fieldGroup->getBaseName(), $this->defaultGroups),
                'use' => false,
            ];
        });
    }

    protected function interact(InputInterface $input, OutputInterface $output)
    {
        $this->options->map(function ($opt) {
            $opt['use'] = $this->ask('Use ' . $opt['name'] . '?', 'Y');

            return $opt;
        });
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        return parent::execute($input, $output); // TODO: Change the autogenerated stub
    }
}
